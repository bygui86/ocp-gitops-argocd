apiVersion: tekton.dev/v1alpha1
kind: Pipeline
metadata:
  labels:
{{ include "springboot-tekton.labels" . | nindent 4 }}
  name: {{ include "springboot-tekton.fullname" . }}-pipeline
spec:
  workspaces:
  - name: local-maven-repo
  resources:
  - name: {{ include "springboot-tekton.fullname" . }}-git
    type: git
  - name: {{ include "springboot-tekton.fullname" . }}-templates
    type: git
  - name: {{ include "springboot-tekton.fullname" . }}-image
    type: image
  ####
  tasks:
  - name: maven-build-binary-build
    taskRef: 
      name: maven-build-binary-build
    resources:
      inputs:
      - name: source
        resource: {{ include "springboot-tekton.fullname" . }}-git
      outputs:
      - name: image
        resource: {{ include "springboot-tekton.fullname" . }}-image
    workspaces:
    - name: maven-repo
      workspace: local-maven-repo
  ####

    #   - name: push-to-git
    #   taskRef:
    #     name: some-git-task # pushes to the Git repository used by the application in the next task
    # - name: sync-application
    #   taskRef:
    #     name: argocd-task-sync-and-wait
    #   params:
    #     - name: application-name
    #       value: some-application
    #     - name: flags
    #       value: --insecure # needed in this example only because the Argo CD server is locally hosted

  ####
  - name: deploy-to-stage
    taskRef:
      name: deploy
    resources:
      inputs:
      - name: templates
        resource: {{ include "springboot-tekton.fullname" . }}-templates
    runAfter:
      - maven-build-binary-build
    params:
    - name: fromNamespace
      value: {{ .Values.deploy.namespace.prefix }}-cicd
    - name: toNamespace
      value: {{ .Values.deploy.namespace.prefix }}-stage  
    - name: tag
      value: latest 
    - name: imageStream
      value: {{ include "springboot-tekton.fullname" . }} 
    - name: deployment
      value: {{ include "springboot-tekton.fullname" . }} 
  ####
  - name: deploy-to-prod
    taskRef:
      name: deploy
    # conditions:
    #   - conditionRef: "verify-no-file-exists-without-resource"
    #     params:
    #       - name: "path"
    #         value: "$(params.path)"
    resources:
      inputs:
      - name: templates
        resource: {{ include "springboot-tekton.fullname" . }}-templates
    runAfter:
      - deploy-to-stage
    params:
    - name: fromNamespace
      value: {{ .Values.deploy.namespace.prefix }}-stage
    - name: toNamespace
      value: {{ .Values.deploy.namespace.prefix }}-prod  
    - name: tag
      value: latest 
    - name: imageStream
      value: {{ include "springboot-tekton.fullname" . }} 
    - name: deployment
      value: {{ include "springboot-tekton.fullname" . }}